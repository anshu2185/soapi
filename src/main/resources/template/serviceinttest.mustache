package {{{basePackage}}}.test;
{{#each wsdlproperties}}
import static {{{basePackage}}}.utils.TestHelper.generateDummyRequest{{inputParam}};
{{/each}}
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
{{#each wsdlproperties}}
import {{{namespace}}}.{{returnType}};
import {{{namespace}}}.{{inputParam}};
{{/each}}
import {{{basePackage}}}.WebServiceIntegrationTestConfiguration;
import {{{packageNameFromNamespace}}}.{{{faultName}}};
import {{{packageNameFromNamespace}}}.{{{portType}}};


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes=WebServiceIntegrationTestConfiguration.class)
public class {{{portType}}}IntegrationTest {

    @Autowired
    private {{{portType}}} {{{portTypeName}}}IntegrationTestClient;
    
     {{#each wsdlproperties}}
    @Test
    public void {{#firstLetterSmallop}}{{operationName}}{{/firstLetterSmallop}}() throws {{{faultName}}} {
        // Given
         {{inputParam}} {{#firstLetterSmallInput}}{{inputParam}}{{/firstLetterSmallInput}} = generateDummyRequest{{inputParam}}();
        
        // When
       // {{returnType}} {{#firstLetterSmallReturn}}{{returnType}}{{/firstLetterSmallReturn}} = {{{portTypeName}}}TestClient.{{#firstLetterSmallop}}{{operationName}}{{/firstLetterSmallop}}({{#firstLetterSmallInput}}{{inputParam}}{{/firstLetterSmallInput}});
        
        // Then
       // assertNotNull({{#firstLetterSmallReturn}}{{returnType}}{{/firstLetterSmallReturn}});
    }
   
{{/each}}
}
